/*
 * driver_steering.c
 *
 *  Created on: Apr 21, 2024
 *      Author: Matthew Briggs
 */

#include "main.h"
#include "gpio.h"
#include "tim.h"

#include "driver_steering.h"

// enable
// used as output

// input A+
// if used as output, asserting will cause servo to ignore changes to B+
// if used as input, it is used as home position sensor

// input B+
// used as output (PWM/frequency command for position)

void Driver_Steering_Init(uint8_t duty_cycle)
{
	// set direction pins for level shifters
	HAL_GPIO_WritePin(STR_INPUTA__DIR_GPIO_Port, STR_INPUTA__DIR_Pin, 1); // input A+ as output
	HAL_GPIO_WritePin(STR_INPUTB__DIR_GPIO_Port, STR_INPUTB__DIR_Pin, 1); // input B+ as output
	// set hard-coded outputs
	HAL_GPIO_WritePin(STR_EN__GPIO_Port, STR_EN__Pin, 1); // enable pin high
	HAL_GPIO_WritePin(STR_INPUTA__GPIO_Port, STR_INPUTA__Pin, 0); // input A+ low
	// set default PWM values
	Driver_Steering_SetDutyCycle(duty_cycle);
}

void Driver_Steering_SetDutyCycle(uint8_t duty_cycle)
{
	// Account for N_Channel
	duty_cycle = 255 - duty_cycle;

	// Input validation for duty cycle
	// Need to clamp from 1 to 254 to avoid no edges (steering servo doesn't like that)
	if (duty_cycle > 254)
	{
		duty_cycle = 254;
	}
	else if (duty_cycle < 1)
	{
		duty_cycle = 1;
	}

	// Set compare (8-Bit Resolution)
	__HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, duty_cycle);
	HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
}
